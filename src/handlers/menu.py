from aiogram import F, Router
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, Message

from handlers.admin import list_employees, today_birthdays, menu_add_hr, menu_remove_hr, menu_search_employee, \
    start_add_employee
from services.hr_storage import HR_IDS
from users.filters import is_hr

router = Router()
# --- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é HR ---
def hr_main_kb():
    kb = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å HR")],
            [KeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å HR")],
            [KeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞")],
            [KeyboardButton(text="üîç –ù–∞–π—Ç–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞")],
            [KeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤")],
            [KeyboardButton(text="üë• –°–ø–∏—Å–æ–∫ HR")],
            [KeyboardButton(text="üéÇ –°–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è")],
            [KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞")]
        ],
        resize_keyboard=True
    )
    return kb

# --- –•–µ–Ω–¥–ª–µ—Ä –≤—ã–∑–æ–≤–∞ –º–µ–Ω—é HR ---
@router.message(F.chat.type == "private", Command('menu'))
async def hr_menu(message: Message):
    if not is_hr(message):
        return await message.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=hr_main_kb())


# --- –ö–Ω–æ–ø–∫–∏ –º–µ–Ω—é ---
@router.message(F.chat.type == "private", F.text == "üìã –°–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤")
async def menu_list_employees(message: Message):
    if not is_hr(message):
        return await message.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
    await list_employees(message)


@router.message(F.chat.type == "private", F.text == "üéÇ –°–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è")
async def menu_today_birthdays(message: Message):
    if not is_hr(message):
        return await message.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")
    await today_birthdays(message)


@router.message(F.chat.type == "private", F.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å HR")
async def menu_add_hr_button(message: Message, state: FSMContext):
    await menu_add_hr(message, state)


@router.message(F.chat.type == "private", F.text == "üóë –£–¥–∞–ª–∏—Ç—å HR")
async def menu_remove_hr_button(message: Message, state: FSMContext):
    await menu_remove_hr(message, state)


@router.message(F.text == "üîç –ù–∞–π—Ç–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞")
async def menu_search_employee_button(message: Message, state: FSMContext):
    await menu_search_employee(message, state)


@router.message(F.text == "üë• –°–ø–∏—Å–æ–∫ HR")
async def list_hr_menu(message: Message):
    if not is_hr(message):
        return await message.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞.")

    if not HR_IDS:
        await message.answer("üë• –°–µ–π—á–∞—Å –Ω–µ—Ç HR.")
        return

    text = "üë• <b>–¢–µ–∫—É—â–∏–µ HR:</b>\n\n"
    for hr in HR_IDS:
        text += f"üÜî <a href='tg://user?id={hr}'>{hr}</a>\n"

    await message.answer(text, parse_mode="HTML")

@router.message(F.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞")
async def menu_add_employee(message: Message, state):
    await start_add_employee(message, state)
